function FEA = FeasibleExploitationArchive(FEA, Offspring, N)
% The Feasible Exploitation Archive of CMOEA-CS

%------------------------------- Copyright --------------------------------
% Copyright (c) 2023 BIMK Group. You are free to use the PlatEMO for
% research purposes. All publications which use this platform or any code
% in the platform should acknowledge the use of "PlatEMO" and reference "Ye
% Tian, Ran Cheng, Xingyi Zhang, and Yaochu Jin, PlatEMO: A MATLAB platform
% for evolutionary multi-objective optimization [educational forum], IEEE
% Computational Intelligence Magazine, 2017, 12(4): 73-87".
%--------------------------------------------------------------------------

% This function is written by Zhe Liu
    %% Dominance relation calculation
    S = [FEA, Offspring];
    S = DataCleaning(S, 1);
    %% Environmental selection
    [P, ~] = size(S.objs);
    if P < N
        remained_solution = [1:P, unidrnd(P,[1, N - P])];
    else
        PopCon = S.cons;
        Cons = sum(max(0,PopCon),2);   
        if sum(Cons <= 0) <= N
            [~, index] = sort(Cons);
            remained_solution = index(1: N);
        else
            S = S(Cons <= 0); 
            PopObj = S.objs;
            zmin = min(PopObj, [], 1) - 1e-6;
            zmax = max(PopObj, [], 1);        
            PopObj       = (PopObj - zmin) ./ (zmax - zmin);
            Del  = Truncation(PopObj, length(S) - N);
            remained_solution = 1: length(S);
            remained_solution(Del) = [];
        end
    end
    FEA = S(remained_solution);
end

function Del = Truncation(PopObj,K)
% Select part of the solutions by truncation

    %% Truncation
    Distance = pdist2(PopObj,PopObj);
    Distance(logical(eye(length(Distance)))) = inf;
    Del = false(1,size(PopObj,1));
    while sum(Del) < K
        Remain   = find(~Del);
        Temp     = sort(Distance(Remain,Remain),2);
        [~,Rank] = sortrows(Temp);
        Del(Remain(Rank(1))) = true;
    end
end